// <auto-generated />
using System;
using Entidad.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entidad.Migrations
{
    [DbContext(typeof(NutriAIContext))]
    partial class NutriAIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidad.Models.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsUserMessage")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__ChatMess__3214EC077EEAE9A8");

                    b.HasIndex("SessionId");

                    b.ToTable("ChatMessage");
                });

            modelBuilder.Entity("Entidad.Models.ChatSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("LastMessageTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("MessageCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ChatSess__3214EC07CFBDE0F4");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ChatSession");
                });

            modelBuilder.Entity("Entidad.Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Altura")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("PreferenciaAlimenticia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__UserInfo__3214EC07EB1F814C");

                    b.HasIndex(new[] { "UsuarioId" }, "UQ__UserInfo__2B3DE7B97DAC18A3")
                        .IsUnique()
                        .HasFilter("[UsuarioId] IS NOT NULL");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Entidad.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3214EC0799336185");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuario__A9D10534D14DADB9")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Entidad.Models.ChatMessage", b =>
                {
                    b.HasOne("Entidad.Models.ChatSession", "Session")
                        .WithMany("ChatMessages")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChatMessage_Session");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("Entidad.Models.ChatSession", b =>
                {
                    b.HasOne("Entidad.Models.Usuario", "Usuario")
                        .WithMany("ChatSessions")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChatSession_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidad.Models.UserInfo", b =>
                {
                    b.HasOne("Entidad.Models.Usuario", "Usuario")
                        .WithOne("UserInfo")
                        .HasForeignKey("Entidad.Models.UserInfo", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_UserInfo_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidad.Models.ChatSession", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("Entidad.Models.Usuario", b =>
                {
                    b.Navigation("ChatSessions");

                    b.Navigation("UserInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
